##############################################
#     CONFIGURATION BLOCKCHAIN
##############################################

# URL de l’API Blockchain utilisée pour les ancrages sécurisés.
BLOCKCHAIN_API_URL=https://clearspace.databeam.eu

# Clé ou token secret nécessaire pour accéder à l’API Blockchain.
BLOCKCHAIN_API_KEY=

##############################################
#           CONFIGURATION FRONTEND
##############################################

# Port sur lequel démarre le serveur frontend (Vite).
FRONTEND_PORT=3000

# Liste des hôtes autorisés pour accéder au frontend via Vite.
# Séparez les différents hôtes par des virgules, sans espaces.
VITE_ALLOWED_HOSTS=localhost,127.0.0.1,clearspace-dxtr

# Active ou désactive le mode debug côté frontend.
# En production, passez à false pour optimisation.
VITE_DEBUG=false

##############################################
#           CONFIGURATION BACKEND
##############################################

# Active ou désactive le mode test/simulation du backend.
# À activer pour prototype et tet d'envoie snas machine disponible
USE_TEST_SIM=true

# Port HTTP sur lequel le backend écoute les requêtes API.
BACKEND_PORT=3200

# Liste des adresses IP autorisées à accéder au backend.
# Séparez par des virgules, sans espaces.
ALLOWED_IPS=localhost,127.0.0.1

# Liste des domaines et adresses autorisés par la politique CORS pour les requêtes cross-origin.
# Utilisez le format complet avec protocole et port si nécessaire.
ALLOWED_ORIGINS=http://localhost,http://clearspace-dxtr

# Désactive la vérification des certificats TLS.
# À utiliser uniquement en développement local, jamais en production.
IGNORE_TLS_ERRORS=false

# Environnement d’exécution de Node.js pour le backend.
# Exemple de valeurs : development, production, test
NODE_ENV=production

# Taille maximale acceptée pour les requêtes JSON du backend.
# Utile pour limiter la charge mémoire lors de requêtes volumineuses.
MAX_JSON_SIZE=5mb

# Niveau de logging côté backend.
# Plus bas en production (warn ou error), plus verbose en dev (debug ou info).
LOG_LEVEL=error

########################
# CONFIGURATION API XTR5
########################

# Protocole utilisé pour accéder à l’API drone distante GraphQL.
# Toujours http
API_PROTOCOL=http

# Adresse IP ou hostname de la machine hébergeant l’API distante.
# Exemple : 192.168.1.100
API_HOST=192.168.1.100

# Port sur lequel l’API distante est accessible.
#Toujours 3200
API_PORT=3200