Ces composants composent l‚Äôinterface utilisateur du frontend DroneWeb. Ils sont organis√©s en trois grandes cat√©gories :

    common/ ‚Üí composants g√©n√©riques r√©utilisables

    flights/ ‚Üí composants m√©tier li√©s √† l‚Äôaffichage d‚Äôun vol/d√©tection

    layout/ ‚Üí composants structurants qui organisent la page

Chaque composant a √©t√© revu pour √™tre :

    Lisible

    Facilement maintenable

    Compatible production (pas de logs inutiles, accessibilit√© am√©lior√©e)

    Stylistiquement coh√©rent avec App.css

1. Dossier components/common/
FlightMap.tsx

    R√¥le : Affiche une carte Leaflet avec la trajectoire (trace) d‚Äôun vol.

    Props cl√©s :

        trace (LatLngExpression[]) ‚Üí liste de coordonn√©es [lat, lon].

        markerIcon (L.Icon) ‚Üí ic√¥ne pour marquer la position finale.

        zoom (number) ‚Üí niveau de zoom initial.

        showMarkers (bool) ‚Üí afficher des cercles aux points de la trace.

        polylineOptions ‚Üí personnalisation de la ligne.

    Utilisation : Utilis√© dans MapLayout et AnchorModalLayout.

    Important :

        Utilise InvalidateMapSize pour √©viter bug de rendu apr√®s resize.

        Couleurs personnalisables via props ou CSS pour uniformit√©.

FlyToPosition.tsx

    R√¥le : D√©place/centre la carte Leaflet vers une position donn√©e.

    Props cl√©s :

        position (LatLngTuple | null) ‚Üí coordonn√©es de destination.

        zoom (optionnel) ‚Üí niveau de zoom apr√®s d√©placement.

        duration ‚Üí dur√©e en secondes de l‚Äôanimation.

        debug ‚Üí activer/d√©sactiver logs.

    Utilisation : Permet le suivi live d‚Äôun drone sur la carte.

Pagination.tsx

    R√¥le : Navigation simple entre les pages de donn√©es.

    Props cl√©s :

        page ‚Üí page courante (commence √† 1).

        maxPage ‚Üí nombre total de pages.

        setPage ‚Üí callback pour changer de page.

    Utilisation : Le plus souvent dans TablesLayout.

    Accessibilit√© : Gestion des aria-label et aria-live pour lecteurs d‚Äô√©cran.

2. Dossier components/flights/
DetailsPanel.tsx

    R√¥le : Affiche les d√©tails d‚Äôun vol s√©lectionn√©.

    Props cl√©s :

        selected (Flight | null)

        detailFields ‚Üí liste des champs √† afficher.

        exportObj ‚Üí fonction pour exporter le JSON du vol.

        selectedTracePoints ‚Üí points du trac√© √† afficher.

        selectedTraceRaw ‚Üí donn√©es brutes JSON du trac√©.

    Fonctions :

        Trie les champs (IMPORTANT_FIELDS en premier).

        Affiche soit texte soit objet JSON format√©.

        Affiche liste des points (local/API).

    Utilisation : int√©gr√© dans MapLayout.

DetectionsTable.tsx

    R√¥le : Table g√©n√©rique pour afficher une liste de d√©tections/vols avec possibilit√© d‚Äôancrer.

    Props cl√©s :

        data ‚Üí liste des d√©tections/vols.

        fields ‚Üí colonnes √† afficher.

        onSelect ‚Üí callback quand l‚Äôutilisateur clique sur une ligne.

        isAnchored ‚Üí savoir si un vol est d√©j√† ancr√©.

        anchorFlight ‚Üí action pour ancrer un vol.

        renderAnchorCell ‚Üí personnalisation visuelle de la cellule d‚Äôancrage.

    Accessibilit√© :

        Navigation clavier (tabIndex, onKeyDown).

        aria-label sur boutons.

3. Dossier components/layout/
AnchorModalLayout.tsx

    R√¥le : Modal affich√©e lors de la pr√©paration d‚Äôun ancrage.

    Contenu :

        JSON des donn√©es.

        Champ description obligatoire.

        Carte (FlightMap) avec possibilit√© de d√©placer/zoomer.

        Boutons "Valider" / "Annuler".

    Props cl√©s :

        anchorModal (AnchorModal) ‚Üí donn√©es du vol.

        anchorDescription / setAnchorDescription

        isZipping ‚Üí √©tat de pr√©paration de l‚Äôarchive ZIP.

        onValidate / onCancel

    Protection : Emp√™che validation si description vide ou trace absente.

    Accessibilit√© : role="dialog", aria-modal.

Header.tsx

    R√¥le : Bandeau sup√©rieur de l‚Äôapplication avec ic√¥ne et titre.

    Props cl√©s :

        title ‚Üí par d√©faut "DroneWeb".

        debug ‚Üí logs en console conditionnels.

    Accessibilit√© :

        role="banner", titre <h1>.

MapLayout.tsx

    R√¥le : Colonne gauche principale ‚Üí Carte + panneau d√©tails.

    Composition :

        Titre

        FlightMap pour l‚Äôaffichage

        DetailsPanel en-dessous

    Props cl√©s :

        selected, selectedTracePoints, selectedTraceRaw, detailFields, exportObj

    Utilisation : Directement instanci√© dans App.tsx.

Sidebar.tsx

    R√¥le : Zone lat√©rale optionnelle pour filtres, menus ou info.

    Props cl√©s :

        children ‚Üí contenu √† afficher.

        title optionnel.

        debug ‚Üí logs contr√¥l√©s.

    Accessibilit√© : role="complementary".

TablesLayout.tsx

    R√¥le : Section droite ‚Üí Tableau live, tableau local, tableau API avec pagination.

    Composition :

        Erreur globale (error)

        Tableau live (drones actuels)

        Tableau local (historique local avec pagination et ancrage)

        Tableau API (historique distant avec pagination)

    Props cl√©s :

        drones / LIVE_FIELDS

        localPageData / setLocalPage

        apiPageData / setApiPage

        isAnchored / renderAnchorCell

        HISTORY_API_FIELDS

        handleSelect

    Accessibilit√© :

        scope="col" sur colonnes

        Messages pour tables vides

    Facteur DRY : Possible de factoriser futur code en un composant DataTable.

üõ† Bonnes pratiques maintenabilit√©

    Garder les props bien typ√©es (Flight, Event, etc.) via types/models.ts.

    Centraliser les styles dans App.css ou un CSS module pour √©viter styles inline.

    Utiliser debug pour contr√¥ler les logs sans commenter du code.

    Factoriser au besoin : si deux tables ou deux panneaux se ressemblent beaucoup, cr√©er un composant commun.

    Respecter l‚Äôaccessibilit√© : roles, aria-label, aria-live, clavier.

üîÑ Flux de donn√©es entre composants

    App.tsx est l‚Äôorchestrateur ‚Üí il appelle :

        useDrones ‚Üí donn√©es live vers TablesLayout et useLiveTraces

        useLocalHistory / useAnchored / useRemoteEvents

        Passe selected et trace √† MapLayout

    Interactions :

        TablesLayout ‚Üí handleSelect ‚Üí met √† jour selected ‚Üí pass√© √† MapLayout ‚Üí DetailsPanel

        renderAnchorCell de TablesLayout ou DetectionsTable ‚Üí ouvre AnchorModalLayout

        AnchorModalLayout ‚Üí onValidate ‚Üí envoi backend

    FlightMap est r√©utilis√© dans carte principale et modale.
